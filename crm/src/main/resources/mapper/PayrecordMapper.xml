<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linxi.mapper.PayrecordMapper">

  <resultMap id="BaseResultMap" type="com.linxi.entity.Payrecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 20 21:32:10 CST 2020.
    -->
    <id column="pay_id" jdbcType="INTEGER" property="payId" />
    <result column="pay_s_id" jdbcType="INTEGER" property="paySId" />
    <result column="pay_sum" jdbcType="VARCHAR" property="paySum" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="pay_type_id" jdbcType="INTEGER" property="payTypeId" />
  </resultMap>

  <!--根据成交客户编号查询支付记录-->
  <select id="queryPByPaySId" resultMap="BaseResultMap">
    SELECT p.*, c.c_name AS cName, pa.pay_type AS payType FROM payrecord p
    LEFT JOIN success s ON p.pay_s_id = s.s_id
    LEFT JOIN appointment a ON a.a_id=s.s_a_id
    LEFT JOIN clue cl ON cl.cl_id=a.a_cl_id
    LEFT JOIN customer c ON c.c_id=cl.cl_c_id
    LEFT JOIN paytype pa ON p.pay_type_id = pa.pay_id
    WHERE p.pay_s_id = #{paySId}
  </select>

  <!--根据成交客户编号查询支付记录-->
  <select id="getTotalByPaySId" resultType="Integer">
    SELECT COUNT(*) FROM payrecord WHERE pay_s_id = #{paySId}
  </select>

  <!--新增支付记录-->
  <insert id="savePayrecord">
    INSERT INTO payrecord(pay_s_id, pay_sum, pay_time, pay_type_id)
    VALUES (#{paySId}, #{paySum}, now(), #{payTypeId})
  </insert>

  <!--根据成交客户编号查询支付总金额-->
  <select id="queryPPaysumBySId" resultType="Integer">
    SELECT SUM(pay_sum) FROM payrecord WHERE pay_s_id = #{sId}
    AND (pay_type_id = 1 OR pay_type_id = 2)
  </select>

  <!--根据成交客户编号查询退款总金额-->
  <select id="queryRefundBySId" resultType="Integer">
    SELECT SUM(pay_sum) FROM payrecord WHERE pay_s_id = #{sId} AND pay_type_id = 3
  </select>

  <!--根据筛选条件查询支付记录-->
  <select id="queryPByScreen" resultMap="BaseResultMap">
    SELECT u.u_name AS uName, c.c_name AS cName, c.c_tel AS cTel,
    h.h_name AS hName, p.pay_time, p.pay_sum, pt.pay_type AS payType FROM payrecord p
    INNER JOIN paytype pt ON p.pay_type_id=pt.pay_id
    INNER JOIN success s ON p.pay_s_id=s.s_id
    INNER JOIN hospital h ON s.s_h_id=h.h_id
    INNER JOIN appointment a ON a.a_id=s.s_a_id
    INNER JOIN clue cl ON cl.cl_id=a.a_cl_id
    INNER JOIN customer c ON c.c_id=cl.cl_c_id
    INNER JOIN `user` u ON cl.cl_u_id=u.u_id
    <where>
      <if test="uId != null">
        AND u.u_id = #{uId}
      </if>
      <if test="hId != null">
        AND s.s_h_id = #{hId}
      </if>
      <if test="payId != null">
        AND pt.pay_id = #{payId}
      </if>
      <if test="beginTime != null and endTime != null">
        AND <![CDATA[  p.pay_time >= DATE_FORMAT(#{beginTime}, '%Y-%m-%d') ]]>
        AND <![CDATA[  p.pay_time <= DATE_ADD(DATE_FORMAT(#{endTime}, '%Y-%m-%d'),INTERVAL 1 DAY) ]]>
      </if>
      AND s.s_whether = 0 AND a.a_status = 2
    </where>
    ORDER BY p.pay_time DESC
    limit #{page}, #{limit}
  </select>

  <!--根据筛选条件查询支付记录总条数-->
  <select id="getTotalByScreen" resultType="Integer">
    SELECT COUNT(*) FROM payrecord p
    INNER JOIN paytype pt ON p.pay_type_id=pt.pay_id
    INNER JOIN success s ON p.pay_s_id=s.s_id
    INNER JOIN hospital h ON s.s_h_id=h.h_id
    INNER JOIN appointment a ON a.a_id=s.s_a_id
    INNER JOIN clue cl ON cl.cl_id=a.a_cl_id
    INNER JOIN customer c ON c.c_id=cl.cl_c_id
    INNER JOIN `user` u ON cl.cl_u_id=u.u_id
    <where>
      <if test="uId != null">
        AND u.u_id = #{uId}
      </if>
      <if test="hId != null">
        AND s.s_h_id = #{hId}
      </if>
      <if test="payId != null">
        AND pt.pay_id = #{payId}
      </if>
      <if test="beginTime != null and endTime != null">
        AND <![CDATA[  p.pay_time >= DATE_FORMAT(#{beginTime}, '%Y-%m-%d') ]]>
        AND <![CDATA[  p.pay_time <= DATE_ADD(DATE_FORMAT(#{endTime}, '%Y-%m-%d'),INTERVAL 1 DAY) ]]>
      </if>
      AND s.s_whether = 0 AND a.a_status = 2
    </where>
  </select>

</mapper>