<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linxi.mapper.UserMapper">

  <resultMap id="BaseResultMap" type="com.linxi.entity.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 20 21:32:10 CST 2020.
    -->
    <id column="u_id" jdbcType="INTEGER" property="uId" />
    <result column="u_name" jdbcType="VARCHAR" property="uName" />
    <result column="u_password" jdbcType="VARCHAR" property="uPassword" />
    <result column="u_role_id" jdbcType="INTEGER" property="uRoleId" />
  </resultMap>

  <!--根据用户名查询用户-->
  <select id="findByLoginName" resultMap="BaseResultMap">
    SELECT u.*, r.r_name AS rName FROM user u LEFT JOIN role r ON u.u_role_id = r.r_id
    WHERE u.u_name = #{username}
  </select>

  <!--查询角色为销售员的所有用户-->
  <select id="queryUserByRName" resultMap="BaseResultMap">
    SELECT u.* FROM user u LEFT JOIN role r ON u.u_role_id = r.r_id
    WHERE r.r_name = '销售员'
  </select>

  <!--根据角色编号查询角色名称-->
  <select id="queryRNameByRId" resultMap="BaseResultMap">
    SELECT r.r_name AS rName FROM user u LEFT JOIN role r ON u.u_role_id = r.r_id
    WHERE r.r_id = #{uRoleId}
  </select>

  <!--根据用户名和角色编号查询用户-->
  <select id="queryUserByUNameAndRId" resultMap="BaseResultMap">
    SELECT u.*, r.r_name AS rName FROM user u LEFT JOIN role r ON u.u_role_id = r.r_id
    <where>
      <if test="uName != null and uName != ''">
        AND u.u_name LIKE '%${uName}%'
      </if>
      <if test="uRoleId != null and uRoleId != 0">
        AND u.u_role_id = #{uRoleId}
      </if>
    </where>
    limit #{page}, #{limit}
  </select>

  <!--根据用户名和角色查询总条数-->
  <select id="getTotalByUNameAndRId" resultType="Integer">
    SELECT COUNT(*) FROM user
    <where>
      <if test="uName != null and uName != ''">
        AND u_name LIKE '%${uName}%'
      </if>
      <if test="uRoleId != null and uRoleId != 0">
        AND u_role_id = #{uRoleId}
      </if>
    </where>
  </select>

  <!--新增用户-->
  <insert id="saveUser">
    INSERT INTO user(u_name, u_password, u_role_id) VALUES (#{uName}, #{uPassword}, #{uRoleId})
  </insert>

  <!--根据编号删除用户-->
  <delete id="delUByUId">
    DELETE FROM user WHERE u_id = #{uId}
  </delete>

  <!--根据编号查询用户-->
  <select id="queryUByUId" resultMap="BaseResultMap">
    SELECT * FROM user WHERE u_id = #{uId}
  </select>

  <!--根据编号编辑用户-->
  <update id="editUByUId">
    UPDATE user SET u_name = #{uName}, u_password = #{uPassword}, u_role_id = #{uRoleId}
    WHERE u_id = #{uId}
  </update>

  <!--根据用户编号查询客户支付总额（即业绩）-->
  <select id="getPerformanceByUId" resultType="Integer">
    SELECT SUM(p.pay_sum) FROM `user` u
    LEFT JOIN customer c ON u.u_id=c.c_u_id
    LEFT JOIN success s ON c.c_id=s.s_c_id
    LEFT JOIN payrecord p ON s.s_id=p.pay_s_id
    WHERE c.c_u_id = #{uId}
  </select>

  <!--修改密码-->
  <update id="editPwd">
    UPDATE user SET u_password = #{uPassword} WHERE u_id = #{uId}
  </update>

</mapper>